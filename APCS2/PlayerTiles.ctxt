#BlueJ class context
comment0.params=t\ n
comment0.target=PlayerTiles(ScrabbleTiles,\ int)
comment0.text=\n\ A\ constructor\ to\ create\ a\ players\ set\ of\ tiles.\n\ @param\ t\ The\ set\ of\ game\ tiles\ that\ the\ player\ will\ draw\ from.\n\ @param\ n\ The\ number\ of\ tiles\ that\ the\ player\ starts\ out\ with.\n
comment1.params=
comment1.target=int\ getPlayerScore()
comment10.params=s1\ s2
comment10.target=boolean\ doSomething(java.lang.String,\ java.lang.String)
comment2.params=
comment2.target=Tile\ drawTile()
comment2.text=\n\ A\ method\ intended\ to\ be\ called\ by\ the\ a\ game's\ ScrabbleTiles\ obj\ \n\ that\ randomly\ selects\ one\ tile\ from\ tiles,\ copies\ it,\ \n\ removes\ it,\ and\ returns\ the\ copy.\n\ (for\ efficency,\ it\ could\ just\ get\ last\ element,\ since\ the\ ArrayList\n\ \ \ is\ already\ shuffled)\n\ @return\ A\ randomly\ selected\ tile\ from\ tiles.\n
comment3.params=n
comment3.target=void\ drawTiles(int)
comment3.text=\ \n\ A\ method\ intended\ to\ be\ called\ by\ the\ player's\ ScrabbleTiles\ obj\ that\n\ draws\ n\ number\ of\ tiles\ from\ the\ game's\ ScrabbleTiles\ obj\n\ and\ adds\ them\ to\ the\ players\ tiles\n\ @param\ gameTiles\ The\ ArrayList\ representing\ the\ games\ tiles.\n\ @param\ n\ The\ number\ of\ tiles\ to\ be\ drawn.\n
comment4.params=letter
comment4.target=int\ letterInTiles(java.lang.String)
comment4.text=\ \n\ A\ method\ intended\ to\ be\ called\ by\ the\ player's\ ScrabbleTiles\ obj\ that\n\ searches\ the\ tiles\ for\ a\ single\ letter.\ Method\ needs\ to\ call\ Tile\ getLetter().\ \n\ @param\ letter\ A\ single\ letter\ that\ the\ method\ searches\ for\ in\ the\ tiles.\n\ @return\ The\ index\ of\ where\ the\ letter\ is\ \n\ or\ -1\ if\ the\ letter\ is\ not\ one\ of\ the\ tiles.\n
comment5.params=word\ letter
comment5.target=int\ letterInTiles(java.lang.String,\ java.lang.String)
comment6.params=word
comment6.target=boolean\ allLettersInTiles(java.lang.String)
comment6.text=\n\ A\ player\ method\ to\ see\ if\ all\ the\ letters\ in\ a\ word\ are\ represented\n\ by\ a\ tile\ in\ the\ player's\ tiles.\ Should\ call\ letterInTiles(String\ letter).\n\ @param\ word\ A\ String\ to\ look\ for\ in\ the\ player's\ tiles.\n\ @return\ Whether\ or\ not\ all\ the\ letters\ in\ the\ word\ are\ in\ tiles\n
comment7.params=word
comment7.target=int\ getScore(java.lang.String)
comment7.text=\ \n\ A\ method\ intended\ to\ be\ called\ by\ a\ player\ ScrabbleTiles\ obj\ that\n\ returns\ the\ total\ of\ all\ the\ letter\ values\ in\ a\ word\ \n\ or\ 0\ if\ a\ letter\ is\ not\ a\ tile.\n\ Gets\ each\ letter\ of\ the\ word,\ and\ call\ the\ letterInTiles\ method\ \n\ which\ finds\ where\ the\ letter\ is.\n\ With\ that\ tiles\ location,\ get\ the\ tile\ and\ get\ its\ value.\n\ Adds\ up\ all\ the\ values.\n\ @param\ word\ A\ String\n\ @return\ The\ value\ of\ the\ tiles\ in\ the\ String,\ \n\ \ \ or\ 0\ if\ the\ String\ contains\ letters\ that\ are\ not\ in\ \n\ \ \ the\ players\ tiles.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment9.params=args
comment9.target=void\ main(java.lang.String[])
numComments=11
